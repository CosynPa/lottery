import numpy as np
import plotly.graph_objs as go


def mc(procedure, simulation: int):
    """Monte Carlo simulation of the procedure

    Procedure is a function that takes no parameter and returns a boolean that indicate whether you win.

    The result is a dict whose keys are the number of experiments to get a win.
    """
    n = 1
    result = {}
    for i in range(simulation):
        if procedure():
            old = result.get(n, 0)
            result[n] = old + 1
            n = 1
        else:
            n += 1
    return result


def get_mean_std(dic):
    """Get the mean and standard deviation from the dict generated by the Monte Carlo simulation"""
    n = 0
    s = 0
    square = 0
    for number, count in dic.items():
        n += count
        s += count * number
        square += count * number ** 2

    mean = s / n
    return mean, np.sqrt((square - n * mean ** 2) / (n - 1))


def plot_pdf(dic):
    """The probability density function from the dict generated by the Monte Carlo simulation"""
    maximum = max(list(dic.keys()))
    xs = list(range(1, maximum + 1))
    ys = [dic.get(x, 0) for x in xs]
    return go.FigureWidget(go.Scatter(x=xs, y=ys))


def plot_cdf(dic):
    """The cumulative distribution function from the dict generated by the Monte Carlo simulation"""
    maximum = max(list(dic.keys()))
    xs = list(range(1, maximum + 1))

    ys = []
    s = 0
    for x in xs:
        s += dic.get(x, 0)
        ys.append(s)

    return go.FigureWidget(go.Scatter(x=xs, y=np.array(ys) / ys[-1]))
